[
    {
        "openapi": "1",
        "info": "2",
        "externalDocs": "3",
        "servers": "4",
        "tags": "5",
        "paths": "6",
        "components": "7"
    },
    "3.0.1",
    {
        "title": "8",
        "description": "9",
        "termsOfService": "10",
        "contact": "11",
        "license": "12",
        "version": "13"
    },
    { "description": "14", "url": "15" },
    ["16", "17", "18"],
    ["19", "20", "21"],
    {
        "/pet/{petId}/uploadImage": "22",
        "/pet": "23",
        "/pet/findByStatus": "24",
        "/pet/findByTags": "25",
        "/pet/{petId}": "26",
        "/store/order": "27",
        "/store/order/{orderId}": "28",
        "/store/inventory": "29",
        "/user/createWithArray": "30",
        "/user/createWithList": "31",
        "/user/{username}": "32",
        "/user/login": "33",
        "/user/logout": "34",
        "/user": "35"
    },
    { "schemas": "36", "securitySchemes": "37" },
    "Swagger Petstore",
    "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
    "http://swagger.io/terms/",
    { "email": "38" },
    { "name": "39", "url": "40" },
    "1.0.6",
    "Find out more about Swagger",
    "http://swagger.io",
    { "description": "41", "url": "42" },
    { "description": "43", "url": "44" },
    { "description": "45", "url": "15" },
    { "name": "46", "description": "47", "externalDocs": "48" },
    { "name": "49", "description": "50" },
    { "name": "51", "description": "52", "externalDocs": "53" },
    { "post": "54", "apiEndpoint": "55" },
    { "put": "56", "post": "57", "apiEndpoint": "58" },
    { "get": "59", "apiEndpoint": "60" },
    { "get": "61", "apiEndpoint": "62" },
    { "get": "63", "post": "64", "delete": "65", "apiEndpoint": "66" },
    { "post": "67", "apiEndpoint": "68" },
    { "get": "69", "delete": "70", "apiEndpoint": "71" },
    { "get": "72", "apiEndpoint": "73" },
    { "post": "74", "apiEndpoint": "75" },
    { "post": "76", "apiEndpoint": "77" },
    { "get": "78", "put": "79", "delete": "80", "apiEndpoint": "81" },
    { "get": "82", "apiEndpoint": "83" },
    { "get": "84", "apiEndpoint": "85" },
    { "post": "86", "apiEndpoint": "87" },
    {
        "ApiResponse": "88",
        "Category": "89",
        "Pet": "90",
        "Tag": "91",
        "Order": "92",
        "User": "93"
    },
    { "api_key": "94", "petstore_auth": "95" },
    "apiteam@swagger.io",
    "Apache 2.0",
    "http://www.apache.org/licenses/LICENSE-2.0.html",
    "prod",
    "https://petstore.swagger.io/v2",
    "dev",
    "http://petstore.swagger.io/v2",
    "qa",
    "pets",
    "Everything about your Pets",
    { "description": "96", "url": "15" },
    "stores",
    "Access to Petstore orders",
    "users",
    "Operations about user",
    { "description": "97", "url": "15" },
    {
        "tags": "98",
        "summary": "99",
        "parameters": "100",
        "requestBody": "101",
        "responses": "102",
        "security": "103",
        "methodName": "104",
        "apiEndpoint": "55",
        "operationId": "105"
    },
    "/pet/{petId}/uploadImage",
    {
        "tags": "106",
        "summary": "107",
        "operationId": "108",
        "requestBody": "109",
        "responses": "110",
        "security": "111",
        "x-codegen-request-body-name": "112",
        "methodName": "113",
        "apiEndpoint": "58"
    },
    {
        "tags": "114",
        "summary": "115",
        "operationId": "116",
        "requestBody": "117",
        "responses": "118",
        "security": "119",
        "x-codegen-request-body-name": "112",
        "methodName": "104",
        "apiEndpoint": "58"
    },
    "/pet",
    {
        "tags": "120",
        "summary": "121",
        "description": "122",
        "operationId": "123",
        "parameters": "124",
        "responses": "125",
        "security": "126",
        "methodName": "127",
        "apiEndpoint": "60"
    },
    "/pet/findByStatus",
    {
        "tags": "128",
        "summary": "129",
        "description": "130",
        "operationId": "131",
        "parameters": "132",
        "responses": "133",
        "deprecated": true,
        "security": "134",
        "methodName": "127",
        "apiEndpoint": "62"
    },
    "/pet/findByTags",
    {
        "tags": "135",
        "summary": "136",
        "description": "137",
        "operationId": "138",
        "parameters": "139",
        "responses": "140",
        "methodName": "127",
        "apiEndpoint": "66"
    },
    {
        "tags": "141",
        "summary": "142",
        "operationId": "143",
        "parameters": "144",
        "requestBody": "145",
        "responses": "146",
        "security": "147",
        "methodName": "104",
        "apiEndpoint": "66"
    },
    {
        "tags": "148",
        "summary": "149",
        "operationId": "150",
        "parameters": "151",
        "responses": "152",
        "security": "153",
        "methodName": "154",
        "apiEndpoint": "66"
    },
    "/pet/{petId}",
    {
        "tags": "155",
        "summary": "156",
        "operationId": "157",
        "requestBody": "158",
        "responses": "159",
        "x-codegen-request-body-name": "112",
        "methodName": "104",
        "apiEndpoint": "68"
    },
    "/store/order",
    {
        "tags": "160",
        "summary": "161",
        "description": "162",
        "operationId": "163",
        "parameters": "164",
        "responses": "165",
        "methodName": "127",
        "apiEndpoint": "71"
    },
    {
        "tags": "166",
        "summary": "167",
        "description": "168",
        "operationId": "169",
        "parameters": "170",
        "responses": "171",
        "methodName": "154",
        "apiEndpoint": "71"
    },
    "/store/order/{orderId}",
    {
        "tags": "172",
        "summary": "173",
        "description": "174",
        "operationId": "175",
        "responses": "176",
        "security": "177",
        "methodName": "127",
        "apiEndpoint": "73"
    },
    "/store/inventory",
    {
        "tags": "178",
        "summary": "179",
        "operationId": "180",
        "requestBody": "181",
        "responses": "182",
        "x-codegen-request-body-name": "112",
        "methodName": "104",
        "apiEndpoint": "75"
    },
    "/user/createWithArray",
    {
        "tags": "183",
        "summary": "179",
        "operationId": "184",
        "requestBody": "185",
        "responses": "186",
        "x-codegen-request-body-name": "112",
        "methodName": "104",
        "apiEndpoint": "77"
    },
    "/user/createWithList",
    {
        "tags": "187",
        "summary": "188",
        "operationId": "189",
        "parameters": "190",
        "responses": "191",
        "methodName": "127",
        "apiEndpoint": "81"
    },
    {
        "tags": "192",
        "summary": "193",
        "description": "194",
        "operationId": "195",
        "parameters": "196",
        "requestBody": "197",
        "responses": "198",
        "x-codegen-request-body-name": "112",
        "methodName": "113",
        "apiEndpoint": "81"
    },
    {
        "tags": "199",
        "summary": "200",
        "description": "194",
        "operationId": "201",
        "parameters": "202",
        "responses": "203",
        "methodName": "154",
        "apiEndpoint": "81"
    },
    "/user/{username}",
    {
        "tags": "204",
        "summary": "205",
        "operationId": "206",
        "parameters": "207",
        "responses": "208",
        "methodName": "127",
        "apiEndpoint": "83"
    },
    "/user/login",
    {
        "tags": "209",
        "summary": "210",
        "operationId": "211",
        "responses": "212",
        "methodName": "127",
        "apiEndpoint": "85"
    },
    "/user/logout",
    {
        "tags": "213",
        "summary": "214",
        "description": "194",
        "operationId": "215",
        "requestBody": "216",
        "responses": "217",
        "x-codegen-request-body-name": "112",
        "methodName": "104",
        "apiEndpoint": "87"
    },
    "/user",
    { "type": "218", "properties": "219" },
    { "type": "218", "properties": "220", "xml": "221" },
    { "required": "222", "type": "218", "properties": "223", "xml": "224" },
    { "type": "218", "properties": "225", "xml": "226" },
    { "type": "218", "properties": "227", "xml": "228" },
    { "type": "218", "properties": "229", "xml": "230" },
    { "type": "231", "name": "232", "in": "233" },
    { "type": "234", "flows": "235" },
    "Find out more",
    "Find out more about our store",
    ["46"],
    "uploads an image",
    ["236", "237", "238", "239"],
    { "content": "240" },
    { "200": "241" },
    ["242"],
    "post",
    "pet_petId_uploadImage",
    ["46"],
    "Update an existing pet",
    "updatePet",
    { "description": "243", "content": "244", "required": true },
    { "200": "245" },
    ["246"],
    "body",
    "put",
    ["46"],
    "Add a new pet to the store",
    "addPet",
    { "description": "243", "content": "247", "required": true },
    { "200": "248", "400": "249" },
    ["250"],
    ["46"],
    "Finds Pets by status",
    "Multiple status values can be provided with comma separated strings",
    "findPetsByStatus",
    ["251"],
    { "200": "252" },
    ["253"],
    "get",
    ["46"],
    "Finds Pets by tags",
    "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
    "findPetsByTags",
    ["254"],
    { "200": "255" },
    ["256"],
    ["46"],
    "Find pet by ID",
    "Returns a single pet",
    "getPetById",
    ["257"],
    { "200": "258", "404": "259" },
    ["46"],
    "Updates a pet in the store with form data",
    "updatePetWithForm",
    ["260"],
    { "content": "261" },
    { "201": "262" },
    ["263"],
    ["46"],
    "Deletes a pet",
    "deletePet",
    ["264", "265"],
    { "200": "266" },
    ["267"],
    "delete",
    ["49"],
    "Place an order for a pet",
    "placeOrder",
    { "description": "268", "content": "269", "required": true },
    { "200": "270" },
    ["49"],
    "Find purchase order by ID",
    "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "getOrderById",
    ["271"],
    { "200": "272" },
    ["49"],
    "Delete purchase order by ID",
    "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
    "deleteOrder",
    ["273"],
    { "200": "274" },
    ["49"],
    "Returns pet inventories by status",
    "Returns a map of status codes to quantities",
    "getInventory",
    { "200": "275" },
    ["276"],
    ["51"],
    "Creates list of users with given input array",
    "createUsersWithArrayInput",
    { "description": "277", "content": "278", "required": true },
    { "200": "279" },
    ["51"],
    "createUsersWithListInput",
    { "description": "277", "content": "280", "required": true },
    { "200": "281" },
    ["51"],
    "Get user by user name",
    "getUserByName",
    ["282"],
    { "200": "283" },
    ["51"],
    "Updated user",
    "This can only be done by the logged in user.",
    "updateUser",
    ["284"],
    { "description": "285", "content": "286", "required": true },
    { "200": "287" },
    ["51"],
    "Delete user",
    "deleteUser",
    ["288"],
    { "400": "289", "404": "290" },
    ["51"],
    "Logs user into the system",
    "loginUser",
    ["291", "292"],
    { "200": "293" },
    ["51"],
    "Logs out current logged in user session",
    "logoutUser",
    { "200": "294" },
    ["51"],
    "Create user",
    "createUser",
    { "description": "295", "content": "296", "required": true },
    { "200": "297" },
    "object",
    { "code": "298", "type": "299", "message": "300" },
    { "id": "301", "name": "302" },
    { "name": "303" },
    ["304", "305"],
    {
        "id": "306",
        "category": "89",
        "name": "307",
        "photoUrls": "308",
        "tags": "309",
        "status": "310"
    },
    { "name": "311" },
    { "id": "312", "name": "313" },
    { "name": "314" },
    {
        "id": "315",
        "petId": "316",
        "quantity": "317",
        "shipDate": "318",
        "status": "319",
        "complete": "320"
    },
    { "name": "321" },
    {
        "id": "322",
        "username": "323",
        "firstName": "324",
        "lastName": "325",
        "email": "326",
        "password": "327",
        "phone": "328",
        "userStatus": "329"
    },
    { "name": "330" },
    "apiKey",
    "api_key",
    "header",
    "oauth2",
    { "implicit": "331" },
    {
        "name": "332",
        "in": "333",
        "description": "334",
        "required": true,
        "schema": "335",
        "example": 1234
    },
    {
        "name": "336",
        "in": "337",
        "description": "334",
        "required": true,
        "schema": "338",
        "example": "339"
    },
    {
        "name": "340",
        "in": "341",
        "description": "334",
        "required": true,
        "schema": "342",
        "example": "343"
    },
    {
        "name": "233",
        "in": "233",
        "description": "334",
        "required": true,
        "schema": "344",
        "example": "345"
    },
    { "multipart/form-data": "346" },
    { "description": "347", "content": "348" },
    { "petstore_auth": "349" },
    "Pet object that needs to be added to the store",
    { "application/json": "350" },
    { "description": "351", "content": "352" },
    { "petstore_auth": "353" },
    { "application/json": "354" },
    { "description": "355", "content": "356" },
    { "description": "357", "content": "358" },
    { "petstore_auth": "359" },
    {
        "name": "360",
        "in": "337",
        "description": "361",
        "required": true,
        "style": "362",
        "explode": true,
        "schema": "363",
        "example": "364"
    },
    { "description": "347", "content": "365" },
    { "petstore_auth": "366" },
    {
        "name": "367",
        "in": "337",
        "description": "368",
        "required": true,
        "style": "362",
        "explode": true,
        "schema": "369",
        "example": "370"
    },
    { "description": "347", "content": "371" },
    { "petstore_auth": "372" },
    {
        "name": "332",
        "in": "333",
        "description": "373",
        "required": true,
        "schema": "374",
        "example": 1234
    },
    { "description": "347", "content": "375" },
    { "description": "376", "content": "377" },
    {
        "name": "332",
        "in": "333",
        "description": "378",
        "required": true,
        "schema": "379",
        "example": 1
    },
    { "application/json": "380" },
    { "description": "355", "content": "381" },
    { "petstore_auth": "382" },
    { "name": "232", "in": "233", "schema": "383", "example": "384" },
    {
        "name": "332",
        "in": "337",
        "description": "385",
        "required": true,
        "schema": "386",
        "example": 1234
    },
    { "description": "351", "content": "387" },
    { "petstore_auth": "388" },
    "order placed for purchasing the pet",
    { "application/json": "389" },
    { "description": "347", "content": "390" },
    {
        "name": "391",
        "in": "337",
        "description": "392",
        "required": true,
        "schema": "393",
        "example": 4
    },
    { "description": "347", "content": "394" },
    {
        "name": "391",
        "in": "333",
        "description": "395",
        "required": true,
        "schema": "396",
        "example": 3
    },
    { "description": "397", "content": "398" },
    { "description": "347", "content": "399" },
    { "api_key": "400" },
    "List of user object",
    { "application/json": "401" },
    { "description": "347", "content": "402" },
    { "application/json": "403" },
    { "description": "347", "content": "404" },
    {
        "name": "336",
        "in": "333",
        "description": "405",
        "required": true,
        "schema": "406",
        "example": "407"
    },
    { "description": "347", "content": "408" },
    {
        "name": "336",
        "in": "333",
        "description": "409",
        "required": true,
        "schema": "410",
        "example": "407"
    },
    "Updated user object",
    { "application/json": "411" },
    { "description": "347", "content": "412" },
    {
        "name": "336",
        "in": "333",
        "description": "413",
        "required": true,
        "schema": "414",
        "example": "407"
    },
    { "description": "415", "content": "416" },
    { "description": "417", "content": "418" },
    {
        "name": "336",
        "in": "337",
        "description": "419",
        "required": true,
        "schema": "420",
        "example": "407"
    },
    {
        "name": "421",
        "in": "337",
        "description": "422",
        "required": true,
        "schema": "423",
        "example": "424"
    },
    { "description": "347", "headers": "425", "content": "426" },
    { "description": "347", "content": "427" },
    "Created user object",
    { "application/json": "428" },
    { "description": "347", "content": "429" },
    { "type": "430", "format": "431" },
    { "type": "432" },
    { "type": "432" },
    { "type": "430", "format": "433" },
    { "type": "432" },
    "Category",
    "name",
    "photoUrls",
    { "type": "430", "format": "433" },
    { "type": "432", "example": "434" },
    { "type": "435", "xml": "436", "items": "437" },
    { "type": "435", "xml": "438", "items": "91" },
    { "type": "432", "description": "439", "enum": "440" },
    "Pet",
    { "type": "430", "format": "433" },
    { "type": "432" },
    "Tag",
    { "type": "430", "format": "433" },
    { "type": "430", "format": "433" },
    { "type": "430", "format": "431" },
    { "type": "432", "format": "441" },
    { "type": "432", "description": "442", "enum": "443" },
    { "type": "444" },
    "Order",
    { "type": "430", "format": "433" },
    { "type": "432" },
    { "type": "432" },
    { "type": "432" },
    { "type": "432" },
    { "type": "432" },
    { "type": "432" },
    { "type": "430", "description": "445", "format": "431" },
    "User",
    { "authorizationUrl": "446", "scopes": "447" },
    "petId",
    "path",
    "ID of pet to update",
    { "type": "430", "format": "433" },
    "username",
    "query",
    { "type": "432" },
    "shiva",
    "cookies",
    "cookie",
    { "type": "432" },
    "cookieValue",
    { "type": "432" },
    "cG9zdG1hbjpwYXNzd29yZA==",
    { "schema": "448" },
    "successful operation",
    { "application/json": "449" },
    ["450", "451"],
    { "schema": "90", "examples": "452" },
    "Invalid ID supplied",
    { "application/json": "453" },
    ["450", "451"],
    { "schema": "90", "examples": "454" },
    "Invalid input",
    { "application/json": "455", "application/xml": "456" },
    "s",
    {},
    ["450", "451"],
    "status",
    "Status values that need to be considered for filter",
    "form",
    { "type": "435", "items": "457" },
    "available",
    { "application/json": "458" },
    ["450", "451"],
    "tags",
    "Tags to filter by",
    { "type": "435", "items": "459" },
    "tag1",
    { "application/json": "460", "application/xml": "461" },
    ["450", "451"],
    "ID of pet to return",
    { "type": "430", "format": "433" },
    { "application/json": "462" },
    "Pet not found",
    {},
    "ID of pet that needs to be updated",
    { "type": "430", "format": "433" },
    { "schema": "463", "example": "464" },
    { "application/json": "465" },
    ["450", "451"],
    { "type": "432" },
    "special-key",
    "Pet id to delete",
    { "type": "430", "format": "466" },
    { "application/json": "467" },
    ["450", "451"],
    { "schema": "92", "examples": "468" },
    { "application/json": "469" },
    "orderId",
    "ID of pet that needs to be fetched",
    { "maximum": 10, "minimum": 1, "type": "430", "format": "433" },
    { "application/json": "470" },
    "ID of the order that needs to be deleted",
    { "minimum": 1, "type": "430", "format": "433" },
    "succesful operation",
    { "application/json": "471" },
    { "application/json": "472" },
    [],
    { "schema": "473", "examples": "474" },
    { "applciation/json": "475" },
    { "schema": "476", "examples": "477" },
    { "applciation/json": "478" },
    "The name that needs to be fetched. Use user1 for testing. ",
    { "type": "432" },
    "shivasai123",
    { "application/json": "479" },
    "name that need to be updated",
    { "type": "432" },
    { "schema": "93", "examples": "480" },
    { "application/json": "481" },
    "The name that needs to be deleted",
    { "type": "432" },
    "Invalid username supplied",
    {},
    "User not found",
    {},
    "The user name for login",
    { "type": "432" },
    "password",
    "The password for login in clear text",
    { "type": "432" },
    "shiva1213",
    { "X-Rate-Limit": "482", "X-Expires-After": "483" },
    { "application/json": "484" },
    { "application/json": "485" },
    { "schema": "93", "examples": "486" },
    { "applciation/json": "487" },
    "integer",
    "int32",
    "string",
    "int64",
    "doggie",
    "array",
    { "wrapped": true },
    { "type": "432", "xml": "488" },
    { "wrapped": true },
    "pet status in the store",
    ["364", "489", "490"],
    "date-time",
    "Order Status",
    ["491", "492", "493"],
    "boolean",
    "User Status",
    "https://petstore.swagger.io/oauth/authorize",
    { "read:pets": "494", "write:pets": "495" },
    { "type": "432", "format": "496" },
    { "schema": "88", "example": "497" },
    "write:pets",
    "read:pets",
    { "200": "498" },
    { "example": "499" },
    { "200": "500", "400": "501" },
    { "example": "502" },
    { "example": "503" },
    { "type": "432", "default": "364", "enum": "504" },
    { "schema": "505", "example": "506" },
    { "type": "432" },
    { "schema": "507", "example": "508" },
    { "schema": "509" },
    { "schema": "90", "example": "510" },
    { "properties": "511" },
    { "name": "512", "status": "490" },
    { "example": "513" },
    "int6",
    { "example": "514" },
    { "200": "515" },
    { "schema": "92", "example": "516" },
    { "schema": "92", "example": "517" },
    { "example": "518" },
    { "schema": "519", "example": "520" },
    { "type": "435", "items": "93" },
    { "200": "521" },
    { "example": "522" },
    { "type": "435", "items": "93" },
    { "200": "523" },
    { "example": "524" },
    { "schema": "93", "example": "525" },
    { "200": "526" },
    { "example": "527" },
    { "description": "528", "schema": "529" },
    { "description": "530", "schema": "531" },
    { "schema": "532", "example": "533" },
    { "example": "534" },
    { "200": "535" },
    { "example": "536" },
    { "name": "537" },
    "pending",
    "sold",
    "placed",
    "approved",
    "delivered",
    "read your pets",
    "modify pets in your account",
    "binary",
    { "code": 200, "type": "538", "message": "539" },
    { "summary": "540", "value": "541" },
    {
        "id": 1,
        "name": "512",
        "photoUrls": "542",
        "tags": "543",
        "status": "364"
    },
    { "summary": "540", "value": "544" },
    { "summary": "545", "value": "546" },
    {
        "id": 1,
        "name": "512",
        "photoUrls": "547",
        "tags": "548",
        "status": "364"
    },
    {
        "id": 1,
        "name": "512",
        "photoUrls": "549",
        "tags": "550",
        "status": "364"
    },
    ["364", "489", "490"],
    { "type": "435", "items": "90" },
    {
        "id": 1,
        "catrgory": "551",
        "name": "512",
        "photoUrls": "552",
        "tags": "553",
        "status": "364"
    },
    { "type": "435", "items": "90" },
    {
        "id": 1,
        "catrgory": "554",
        "name": "512",
        "photoUrls": "555",
        "tags": "556",
        "status": "364"
    },
    { "type": "435", "items": "90" },
    {
        "id": 1,
        "catrgory": "557",
        "name": "512",
        "photoUrls": "558",
        "tags": "559",
        "status": "364"
    },
    { "name": "560", "status": "561" },
    "Bruno",
    { "code": 201, "type": "538", "message": "562" },
    { "code": 201, "type": "538", "message": 1 },
    { "summary": "540", "value": "563" },
    {
        "id": 1,
        "petId": 2,
        "quantity": 2,
        "shipDate": "564",
        "status": "491",
        "complete": true
    },
    {
        "id": 1,
        "petId": 2,
        "quantity": 2,
        "shipDate": "564",
        "status": "491",
        "complete": true
    },
    { "code": 200, "type": "538", "message": 1 },
    { "type": "218", "additionalProperties": "565" },
    { "additionalProp1": 1, "additionalProp2": 2, "additionalProp3": 3 },
    { "summary": "566", "value": "567" },
    { "code": 200, "type": "538", "message": "568" },
    { "summary": "566", "value": "569" },
    { "code": 200, "type": "538", "message": "568" },
    {
        "id": 1,
        "usrename": "407",
        "firstName": "570",
        "lastName": "571",
        "email": "572",
        "password": "424",
        "phone": 89277499209
    },
    { "summary": "540", "value": "573" },
    { "code": 200, "type": "538", "message": 1 },
    "calls per hour allowed by the user",
    { "type": "430", "format": "431" },
    "date in UTC when token expires",
    { "type": "432", "format": "441" },
    { "type": "432" },
    { "code": 200, "type": "538", "message": "574" },
    { "code": 200, "type": "538", "message": "568" },
    { "summary": "540", "value": "575" },
    { "code": 200, "type": "538", "message": 1 },
    "photoUrl",
    "unknown",
    "uploaded succsfully",
    "positive",
    {
        "id": 1234,
        "catrgory": "576",
        "name": "512",
        "photoUrls": "577",
        "tags": "578",
        "status": "364"
    },
    ["579"],
    ["580"],
    {
        "id": 1234,
        "catrgory": "581",
        "name": "512",
        "photoUrls": "582",
        "tags": "583",
        "status": "364"
    },
    "negative",
    { "id": 1234, "catrgory": "584" },
    ["579"],
    ["585"],
    ["579"],
    ["586"],
    { "id": 1, "name": "587" },
    ["579"],
    ["588"],
    { "id": 1, "name": "587" },
    ["579"],
    ["589"],
    { "id": 1, "name": "587" },
    ["579"],
    ["590"],
    { "type": "432", "description": "591" },
    { "type": "432", "description": "592" },
    "updated succesfully",
    {
        "id": 1,
        "petId": 2,
        "quantity": 2,
        "shipDate": "564",
        "status": "491",
        "complete": true
    },
    "2023-05-24T07:11:03.663Z",
    { "type": "430", "format": "431" },
    "postive",
    ["593"],
    "ok",
    ["594"],
    "shivasai",
    "mandepally",
    "shivasai@gmail.com",
    {
        "id": 1,
        "usrename": "407",
        "firstName": "570",
        "lastName": "571",
        "email": "572",
        "password": "424",
        "phone": 95420881715
    },
    "logged in user session:1684921725673",
    {
        "id": 1,
        "username": "407",
        "firstName": "570",
        "lastName": "571",
        "email": "572",
        "password": "424",
        "phone": 9542066149,
        "userStatus": 0
    },
    { "id": 1, "name": "595" },
    ["579"],
    ["596"],
    "https://germanshepard/burno.jpg",
    { "id": 1, "name": "597" },
    { "id": 1, "name": "587" },
    ["579"],
    ["598"],
    { "id": 1, "name": "587" },
    { "id": 1, "name": "597" },
    { "id": 1, "name": "597" },
    "German shepard",
    { "id": 1, "name": "597" },
    { "id": 1, "name": "597" },
    { "id": 1, "name": "597" },
    "Updated name of the pet",
    "Updated status of the pet",
    {
        "id": 1,
        "usrename": "407",
        "firstName": "570",
        "lastName": "571",
        "email": "572",
        "password": "424",
        "phone": 9542066149,
        "userStatus": 0
    },
    {
        "id": 1,
        "usrename": "407",
        "firstName": "570",
        "lastName": "571",
        "email": "572",
        "password": "424",
        "phone": 89277499209
    },
    "BullDog",
    { "id": 1, "name": "597" },
    "Tommy",
    { "id": 1, "name": "597" }
]
